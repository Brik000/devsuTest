version: '3.8'

services:
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest

  mysql-customer:
    image: mysql:8
    container_name: mysql-customer
    environment:
      MYSQL_DATABASE: customerdb
      MYSQL_ROOT_PASSWORD: root
    ports:
      - "3310:3306"
    volumes:
      - mysql_customer_data:/var/lib/mysql
      - ./sql/BaseDatos.sql:/docker-entrypoint-initdb.d/init-customer.sql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-uroot", "-proot"]
      interval: 10s
      timeout: 5s
      retries: 10

  customer-service:
    build: ./customer-service
    container_name: customer-service
    ports:
      - "8081:8080"
      - "5005:5005"
    depends_on:
      mysql-customer:
        condition: service_healthy
      rabbitmq:
        condition: service_started
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql-customer:3306/customerdb
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: root
      SPRING_RABBITMQ_HOST: rabbitmq

  account-service:
    build: ./account-service
    container_name: account-service
    ports:
      - "8082:8080"
      - "5006:5006"
    depends_on:
      mysql-customer:
        condition: service_healthy
      rabbitmq:
        condition: service_started
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql-customer:3306/accountdb
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: root
      SPRING_RABBITMQ_HOST: rabbitmq

volumes:
  mysql_customer_data:
